load model "gemini"
load model "claude"
load model "openai-tts"
load model "openai-embeddings"

text document_text = doc("paper.pdf", PDF)
image illustrations = doc("paper.pdf", PDF)
text summary = generate("summarize this document", document_text)

using "gemini":
    text extracted_text = ask("What does this image say?", illustrations)
    cache(extracted_text)

using "claude":
    text haiku = generate("Write a haiku about the above", extracted_text)
    cache(haiku)

using "openai-tts":
    audio spoken = generate("Convert haiku to audio", haiku)
    save(spoken, "haiku.wav")

stream_out(haiku, console)

audio mic_input = stream_in(mic, WAV)
text translated = generate("Translate spoken audio to French", mic_input)

embedding doc_embed = embed(document_text)
embedding input_embed = embed(translated)

stream_out(translated, console)

